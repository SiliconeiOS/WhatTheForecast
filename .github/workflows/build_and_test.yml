name: WhatTheForecast Build & Test

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: macos-14
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer

      - name: Cache Xcode build products
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            .build
          key: ${{ runner.os }}-xcode-${{ hashFiles('WhatTheForecast.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-xcode-

      - name: Install xcpretty
        run: gem install xcpretty

      - name: Find Simulator UDID
        id: simulator
        run: |
          UDID=$(xcrun simctl list devices 'iPhone 16 Pro' --json | jq -r '.devices | .[] | .[] | select(.isAvailable == true and .state == "Shutdown") | .udid' | head -n 1)
          echo "SIMULATOR_UDID=$UDID" >> "$GITHUB_ENV"
      
      - name: Build for testing (All Tests)
        id: build
        run: |
          set -o pipefail && xcodebuild \
            build-for-testing \
            -workspace WhatTheForecast.xcodeproj/project.xcworkspace \
            -scheme WhatTheForecast \
            -destination "id=${{ env.SIMULATOR_UDID }}" \
            -skipPackagePluginValidation | xcpretty
          
          XCTESTRUN_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name '*.xctestrun' | head -n 1)
          echo "xctestrun_path=$XCTESTRUN_PATH" >> "$GITHUB_OUTPUT"

      - name: Run Unit Tests
        run: |
          set -o pipefail && xcodebuild \
            test-without-building \
            -xctestrun "${{ steps.build.outputs.xctestrun_path }}" \
            -destination "id=${{ env.SIMULATOR_UDID }}" \
            -only-testing:WhatTheForecastTests | xcpretty

      - name: Erase Simulator
        run: |
          echo "Erasing simulator to ensure a clean state for UI tests..."
          xcrun simctl erase ${{ env.SIMULATOR_UDID }}
          
      - name: Run UI Tests
        run: |
          set -o pipefail && xcodebuild \
            test-without-building \
            -xctestrun "${{ steps.build.outputs.xctestrun_path }}" \
            -destination "id=${{ env.SIMULATOR_UDID }}" \
            -only-testing:WhatTheForecastUITests | xcpretty